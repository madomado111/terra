diff --git a/src/Core/Package.vala b/src/Core/Package.vala
index 62d206fa..cbf05983 100644
--- a/src/Core/Package.vala
+++ b/src/Core/Package.vala
@@ -42,8 +42,29 @@ public enum RuntimeStatus {
 }

 public class AppCenterCore.Package : Object {
+    // locally installed packages
     public const string APPCENTER_PACKAGE_ORIGIN = "appcenter";
-    private const string ELEMENTARY_STABLE_PACKAGE_ORIGIN = "elementary-stable-jammy-main";
+
+    // Fedora repositories
+    private const string FEDORA_STABLE_PACKAGE_ORIGIN = "fedora";
+    private const string FEDORA_UPDATES_PACKAGE_ORIGIN = "updates";
+    private const string FEDORA_TESTING_PACKAGE_ORIGIN = "updates-testing";
+
+    // RPMFusion repositories
+    private const string RPMFUSION_FREE_STABLE_PACKAGE_ORIGIN = "rpmfusion-free";
+    private const string RPMFUSION_FREE_UPDATES_PACKAGE_ORIGIN = "rpmfusion-free-updates";
+    private const string RPMFUSION_FREE_TESTING_PACKAGE_ORIGIN = "rpmfusion-free-updates-testing";
+    private const string RPMFUSION_NONFREE_STABLE_PACKAGE_ORIGIN = "rpmfusion-nonfree";
+    private const string RPMFUSION_NONFREE_UPDATES_PACKAGE_ORIGIN = "rpmfusion-nonfree-updates";
+    private const string RPMFUSION_NONFREE_TESTING_PACKAGE_ORIGIN = "rpmfusion-nonfree-updates-testing";
+
+    // Ultramarine repositories
+    private const string ULTRAMARINE_PACKAGE_ORIGIN = "ultramarine";
+    private const string AKMODS_SECUREBOOT_PACKAGE_ORIGIN = "copr::egeretto:akmods-secureboot";
+    private const string KMODTOOL_SECUREBOOT_PACKAGE_ORIGIN = "copr::egeretto:kmodtool-secureboot";
+
+    // Terra repositories
+    private const string TERRA_PACKAGE_ORIGIN = "terra";

     public RuntimeStatus runtime_status { get; set; default = RuntimeStatus.UP_TO_DATE; }

@@ -216,8 +237,12 @@ public class AppCenterCore.Package : Object {
     public bool is_native {
         get {
             switch (component.get_origin ()) {
-                case APPCENTER_PACKAGE_ORIGIN:
-                case ELEMENTARY_STABLE_PACKAGE_ORIGIN:
+                case FEDORA_STABLE_PACKAGE_ORIGIN:
+                case FEDORA_UPDATES_PACKAGE_ORIGIN:
+                case FEDORA_TESTING_PACKAGE_ORIGIN:
+                case ULTRAMARINE_PACKAGE_ORIGIN:
+                case AKMODS_SECUREBOOT_PACKAGE_ORIGIN:
+                case KMODTOOL_SECUREBOOT_PACKAGE_ORIGIN:
                     return true;
                 default:
                     return false;
@@ -328,12 +353,33 @@ public class AppCenterCore.Package : Object {
         owned get {
             unowned string origin = component.get_origin ();
             if (backend is PackageKitBackend) {
-                if (origin == APPCENTER_PACKAGE_ORIGIN) {
-                    return _("AppCenter");
-                } else if (origin == ELEMENTARY_STABLE_PACKAGE_ORIGIN) {
-                    return _("elementary Updates");
-                } else if (origin.has_prefix ("ubuntu-")) {
-                    return _("Ubuntu (non-curated)");
+                switch (origin) {
+                    case FEDORA_STABLE_PACKAGE_ORIGIN:
+                        return "Fedora";
+                    case FEDORA_UPDATES_PACKAGE_ORIGIN:
+                        return "Fedora Updates";
+                    case FEDORA_TESTING_PACKAGE_ORIGIN:
+                        return "Fedora Updates (Testing)";
+                    case RPMFUSION_FREE_STABLE_PACKAGE_ORIGIN:
+                        return "RPMFusion";
+                    case RPMFUSION_FREE_UPDATES_PACKAGE_ORIGIN:
+                        return "RPMFusion Updates";
+                    case RPMFUSION_FREE_TESTING_PACKAGE_ORIGIN:
+                        return "RPMFusion Updates (Testing)";
+                    case RPMFUSION_NONFREE_STABLE_PACKAGE_ORIGIN:
+                        return "RPMFusion (Non-free Software)";
+                    case RPMFUSION_NONFREE_UPDATES_PACKAGE_ORIGIN:
+                        return "RPMFusion (Non-free Software) Updates";
+                    case RPMFUSION_NONFREE_TESTING_PACKAGE_ORIGIN:
+                        return "RPMFusion (Non-free Software) Updates (Testing)";
+                    case ULTRAMARINE_PACKAGE_ORIGIN:
+                        return "Ultramarine";
+                    case AKMODS_SECUREBOOT_PACKAGE_ORIGIN:
+                        return "Secureboot support for akmods";
+                    case KMODTOOL_SECUREBOOT_PACKAGE_ORIGIN:
+                        return "Secureboot support for kmodtool";
+                    case TERRA_PACKAGE_ORIGIN:
+                        return "Terra";
                 }
             } else if (backend is FlatpakBackend) {
                 var fp_package = this as FlatpakPackage;
@@ -342,8 +388,6 @@ public class AppCenterCore.Package : Object {
                 }

                 return fp_package.remote_title;
-            } else if (backend is UbuntuDriversBackend) {
-                return _("Ubuntu Drivers");
             }

             return _("Unknown Origin (non-curated)");
